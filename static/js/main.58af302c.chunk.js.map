{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/FeedFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","authService","auth","storageService","storage","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","photoURL","profilePhoto","setProfilePhoto","newProfilePhoto","setNewProfilePhoto","history","useHistory","onSubmit","event","a","preventDefault","profilePhotoUrl","profilePhotoRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","updateProfile","window","alert","currentUser","className","src","width","height","onChange","value","target","type","autoFocus","placeholder","for","icon","faPlus","id","accept","Photo","files","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","onClick","marginTop","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","confirm","doc","delete","refFromURL","attachmentUrl","toggleEditing","update","updatedAt","Date","now","creatorName","createdTime","createdAt","creatorProfileImg","faTrash","faPencilAlt","getDate","getMonth","getFullYear","getHours","getMinutes","FeedFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","creatorId","collection","add","maxLength","htmlFor","theFile","onloadend","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58af302c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();  //DB생성\r\nexport const authService = firebase.auth();\r\nexport const storageService = firebase.storage();\r\n//모든것을 export 하는 대신 firebase.auth() 서비스만 export\r\n\r\n","import { faPlug, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { authService, dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default ({ userObj,refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [profilePhoto, setProfilePhoto] = useState(userObj.photoURL); //사용자의 프로필 사진을 보여주기 위해\r\n  const [newProfilePhoto, setNewProfilePhoto] = useState(\"\");   //파일 선택시 미리보기 위해서\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser()\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const Photo = files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setNewProfilePhoto(result);\r\n    };\r\n    reader.readAsDataURL(Photo);\r\n  };\r\n  const onFileClear = () => {\r\n    setNewProfilePhoto(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let profilePhotoUrl = \"\";\r\n    if (newProfilePhoto !== \"\" && newProfilePhoto !== profilePhoto) {\r\n      const profilePhotoRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${userObj.displayName}/${uuidv4()}`);\r\n      const response = await profilePhotoRef.putString(\r\n        newProfilePhoto,\r\n        \"data_url\"\r\n      );\r\n      profilePhotoUrl = await response.ref.getDownloadURL();\r\n      setNewProfilePhoto(\"\");\r\n      setProfilePhoto(profilePhotoUrl)\r\n    }\r\n    if (\r\n      userObj.displayName !== newDisplayName ||\r\n      userObj.profilePhoto !== newProfilePhoto\r\n    ) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n        photoURL: profilePhoto,\r\n      });\r\n      window.alert(\"Updated!\");\r\n    }\r\n    refreshUser(authService.currentUser.displayName);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"profile_container\">\r\n        <img src={profilePhoto} width=\"100px\" height=\"100px\" className=\"profilePhoto\" />\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input \r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <>\r\n        <label for=\"attach-file\" className=\"profileInput__label\">\r\n        <span>Fix ProfileImage</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n          {newProfilePhoto && (\r\n            <div className=\"preview_container \">\r\n              <span className=\"profile_load\">미리보기</span>\r\n              <img className=\"profileImg__load\" src={newProfilePhoto} width=\"100px\" height=\"100px\" />\r\n              <br></br>\r\n              <button className=\"fileClearBtn\" onClick={onFileClear}>Cancel</button>\r\n            </div>\r\n          )}\r\n        </>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n          />\r\n      </form>\r\n      </div>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm= () =>{\r\n    const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  \r\n  \r\n    const onChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n          setEmail(value);\r\n        } else if (name === \"password\") {\r\n          setPassword(value);\r\n        }\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault(); //preventDefault = 기본 행위 방지\r\n        try {\r\n          let data;\r\n          if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(\r\n              email,\r\n              password\r\n            );\r\n          } else {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n          }\r\n          console.log(data);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      };\r\n      const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    \r\n      return (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container\">\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n              value={email}\r\n              onChange={onChange}\r\n              className=\"authInput\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              value={password}\r\n              className=\"authInput\"\r\n              onChange={onChange}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"authInput authSubmit\"\r\n              value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n          </form>\r\n          <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n          </span>\r\n        </>\r\n      );\r\n};\r\n\r\nexport default AuthForm;","import {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n          <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">\r\n            Continue with Google\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button className=\"authBtn\" onClick={onSocialClick} name=\"github\">\r\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner , userObj }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`feeds/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    console.log(nweetObj , newNweet);\r\n    await dbService.doc(`feeds/${nweetObj.id}`).update({\r\n        text:newNweet,\r\n        updatedAt:Date.now(),\r\n        creatorName:userObj.displayName,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const createdTime = new Date(nweetObj.createdAt);\r\n  return (\r\n    <div className=\"feed\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container feedEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n          <input type=\"submit\" value=\"Update\" className=\"formBtn\"/>\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n        </>\r\n      ) : (\r\n        <>\r\n        <div className=\"feed_container\">\r\n          <img src={nweetObj.creatorProfileImg} className=\"feed_userProfile_Img\"/>\r\n          <span className=\"feed_userName\">{nweetObj.creatorName}</span>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl &&\r\n            <img src={nweetObj.attachmentUrl} className=\"feed_UploadImage\" />\r\n          }\r\n          {isOwner && (\r\n            <div className=\"feed__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash}/>\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt}/>\r\n              </span>\r\n            </div>\r\n          )}\r\n          <span className=\"feed_createdTime\">{createdTime.getDate()+\r\n          \"/\"+(createdTime.getMonth()+1)+\r\n          \"/\"+createdTime.getFullYear()+\r\n          \" \"+createdTime.getHours()+\r\n          \":\"+createdTime.getMinutes()}</span>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst FeedFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    //collection(\"nweets\").add({})의 add가 promise를 리턴하기때문에 async 사용\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      creatorName:userObj.displayName,\r\n      creatorProfileImg:userObj.photoURL,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"feeds\").add(nweetObj);\r\n    setNweet(\"\"); //submit하고 나선 다시 빈 입력창\r\n    setAttachment(\"\"); //파일 선택 빈공간으로 초기화\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0]; //파일\r\n    const reader = new FileReader(); //reader 생성\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile); //readAsDataURL을 이용해서 파일(theFile) 읽음\r\n  };\r\n  const onFileClear = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  //opacity : 불투명\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add Photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img src={attachment} style={{backgroundImage:attachment}}/>\r\n          <button className=\"factoryForm_clear\" onClick={onFileClear}>\r\n            <span>Remove </span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FeedFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport FeedFactory from \"components/FeedFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  //Router.js 를 통해 App.js로 부터온 userObj (로그인한 유저 정보)\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    console.log(userObj.photoURL);\r\n    dbService\r\n      .collection(\"feeds\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        //onSnapshot = DB변화가 있을시 실행 (실시간)  /orderBy(\"createdAt\",\"desc\") = 날짜 내림차순 정렬\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <FeedFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            userObj={userObj}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li >\r\n        <Link to=\"/\" style={{ marginRight: 10 }}></Link>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n//<> </>:Fragment 묶고싶을때 사용 div 등을 사용하고 싶지 않고 그냥 묶고만 싶을때\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: \"80\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      //onAuthStateChanged() =>\n      if (user) {\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          photoURL:user.photoURL,\n          updateProfile:(args)=>user.updateProfile(args),\n        });\n      }else{\n        setUserObj(null)\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      photoURL:user.photoURL,\n      updateProfile:(args)=>user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing....\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\") //'root' 로 돼있으면 css 오류남 \"root\"로 변경\n);\n\n"],"sourceRoot":""}